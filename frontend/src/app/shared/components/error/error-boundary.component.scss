// file: frontend/src/app/shared/components/error/error-boundary.component.scss
// author: Corey Dale Peters (moved from auth-flow to shared by Claude Code Assistant)
// date: 2025-06-23
// description: Styles for reusable error boundary component

@use '../../../styles/variables' as v;
@use '../../../styles/mixins' as m;
@use 'sass:color';

.error-boundary {
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
  padding: v.$spacing-lg;
  background-color: rgba(v.$danger-color, 0.05);
  border: 1px solid rgba(v.$danger-color, 0.2);
  border-left: 4px solid v.$danger-color;
  border-radius: v.$border-radius;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  &__container {
    display: flex;
    align-items: flex-start;
    gap: v.$spacing-md;
    margin-bottom: v.$spacing-lg;
  }

  &__icon {
    flex-shrink: 0;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: v.$danger-color;
    color: v.$white;
    border-radius: 50%;
    font-size: v.$font-size-lg;
  }

  &__content {
    flex: 1;
    min-width: 0; // Prevent flex item from overflowing
  }

  &__title {
    font-size: v.$font-size-lg;
    font-weight: v.$font-weight-semibold;
    color: v.$danger-color;
    margin: 0 0 v.$spacing-sm 0;
    line-height: 1.3;
  }

  &__message {
    font-size: v.$font-size-base;
    color: v.$text-primary;
    margin: 0 0 v.$spacing-md 0;
    line-height: 1.5;
  }

  &__details {
    margin-top: v.$spacing-md;
  }

  &__details-toggle {
    display: flex;
    align-items: center;
    gap: v.$spacing-xs;
    background: none;
    border: none;
    color: v.$primary-color;
    font-size: v.$font-size-sm;
    font-family: v.$font-family-base;
    cursor: pointer;
    padding: v.$spacing-xs 0;
    text-decoration: underline;
    transition: color 0.2s ease;

    &:hover {
      color: color.adjust(v.$primary-color, $lightness: -10%);
    }

    &:focus {
      outline: 2px solid v.$primary-color;
      outline-offset: 2px;
      border-radius: v.$border-radius-sm;
    }

    i {
      font-size: v.$font-size-xs;
      transition: transform 0.2s ease;
    }
  }

  &__technical-details {
    margin-top: v.$spacing-sm;
    padding: v.$spacing-sm;
    background-color: v.$gray-100;
    border: 1px solid v.$border-color;
    border-radius: v.$border-radius-sm;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;

    &--expanded {
      max-height: 200px;
      overflow-y: auto;
    }

    pre {
      font-family: 'Courier New', monospace;
      font-size: v.$font-size-xs;
      color: v.$text-secondary;
      margin: 0;
      white-space: pre-wrap;
      word-break: break-word;
    }
  }

  &__actions {
    display: flex;
    flex-wrap: wrap;
    gap: v.$spacing-sm;
    justify-content: center;
  }

  &__action {
    display: flex;
    align-items: center;
    gap: v.$spacing-xs;
    padding: v.$spacing-sm v.$spacing-md;
    border-radius: v.$border-radius;
    font-size: v.$font-size-sm;
    font-family: v.$font-family-base;
    font-weight: v.$font-weight-medium;
    cursor: pointer;
    transition: all 0.2s ease;
    min-height: 40px;
    border: 1px solid transparent;

    &:focus {
      outline: 2px solid v.$primary-color;
      outline-offset: 2px;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    i {
      font-size: v.$font-size-sm;
    }

    // Primary action (Try Again)
    &--primary {
      background-color: v.$primary-color;
      color: v.$white;
      border-color: v.$primary-color;

      &:hover:not(:disabled) {
        background-color: color.adjust(v.$primary-color, $lightness: -10%);
        border-color: color.adjust(v.$primary-color, $lightness: -10%);
      }
    }

    // Secondary action (Go Back)
    &--secondary {
      background-color: v.$white;
      color: v.$text-primary;
      border-color: v.$border-color;

      &:hover:not(:disabled) {
        background-color: v.$bg-secondary;
        border-color: v.$primary-color;
        color: v.$primary-color;
      }
    }

    // Tertiary action (Start Over)
    &--tertiary {
      background-color: transparent;
      color: v.$text-secondary;
      border-color: transparent;

      &:hover:not(:disabled) {
        background-color: rgba(v.$danger-color, 0.1);
        color: v.$danger-color;
        border-color: rgba(v.$danger-color, 0.3);
      }
    }
  }
}

// Screen reader only content
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Variations for different contexts
.error-boundary {
  // Compact variant for inline errors
  &--compact {
    max-width: none;
    padding: v.$spacing-md;
    margin: 0;

    .error-boundary__container {
      margin-bottom: v.$spacing-md;
    }

    .error-boundary__icon {
      width: 32px;
      height: 32px;
      font-size: v.$font-size-base;
    }

    .error-boundary__title {
      font-size: v.$font-size-base;
    }

    .error-boundary__actions {
      justify-content: flex-start;
    }
  }

  // Full-page variant for critical errors
  &--fullpage {
    max-width: 600px;
    padding: v.$spacing-xl;
    margin: v.$spacing-xl auto;

    .error-boundary__icon {
      width: 60px;
      height: 60px;
      font-size: v.$font-size-xl;
    }

    .error-boundary__title {
      font-size: v.$font-size-xl;
    }

    .error-boundary__message {
      font-size: v.$font-size-lg;
    }
  }

  // Warning variant (yellow theme)
  &--warning {
    background-color: rgba(v.$warning-color, 0.05);
    border-color: rgba(v.$warning-color, 0.2);
    border-left-color: v.$warning-color;

    .error-boundary__icon {
      background-color: v.$warning-color;
    }

    .error-boundary__title {
      color: v.$warning-color;
    }
  }

  // Info variant (blue theme)
  &--info {
    background-color: rgba(v.$info-color, 0.05);
    border-color: rgba(v.$info-color, 0.2);
    border-left-color: v.$info-color;

    .error-boundary__icon {
      background-color: v.$info-color;
    }

    .error-boundary__title {
      color: v.$info-color;
    }
  }
}

// Mobile responsiveness
@media (max-width: 768px) {
  .error-boundary {
    padding: v.$spacing-md;

    &__container {
      gap: v.$spacing-sm;
      margin-bottom: v.$spacing-md;
    }

    &__icon {
      width: 32px;
      height: 32px;
      font-size: v.$font-size-base;
    }

    &__title {
      font-size: v.$font-size-base;
    }

    &__message {
      font-size: v.$font-size-sm;
    }

    &__actions {
      flex-direction: column;
      gap: v.$spacing-xs;
    }

    &__action {
      width: 100%;
      justify-content: center;
      min-height: 44px; // Better touch targets
      padding: v.$spacing-sm v.$spacing-lg;
    }

    // Adjust fullpage variant for mobile
    &--fullpage {
      margin: v.$spacing-md;
      padding: v.$spacing-lg;
    }
  }
}

@media (max-width: 480px) {
  .error-boundary {
    padding: v.$spacing-sm;
    margin: 0 v.$spacing-xs;

    &__technical-details {
      &--expanded {
        max-height: 150px;
      }
    }

    // Further reduce fullpage variant for small screens
    &--fullpage {
      margin: v.$spacing-xs;
      padding: v.$spacing-md;

      .error-boundary__icon {
        width: 40px;
        height: 40px;
        font-size: v.$font-size-lg;
      }
    }
  }
}