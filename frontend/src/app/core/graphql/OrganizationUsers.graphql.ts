// Auto-generated GraphQL operations for OrganizationUsers (Lambda-backed)
// Do not edit manually. Generated by generate.py




export const OrganizationUsersCreateMutation = /* GraphQL */ `
mutation OrganizationUsersCreate($input: OrganizationUsersCreateInput!) {
  OrganizationUsersCreate(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersUpdateMutation = /* GraphQL */ `
mutation OrganizationUsersUpdate($input: OrganizationUsersUpdateInput!) {
  OrganizationUsersUpdate(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersDeleteMutation = /* GraphQL */ `
mutation OrganizationUsersDelete($id: ID!) {
  OrganizationUsersDelete(id: $id) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersDisableMutation = /* GraphQL */ `
mutation OrganizationUsersDisable($id: ID!) {
  OrganizationUsersDisable(id: $id) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersQueryByOrganizationId = /* GraphQL */ `
query OrganizationUsersQueryByOrganizationId($input: OrganizationUsersQueryByOrganizationIdInput!) {
  OrganizationUsersQueryByOrganizationId(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersQueryByUserId = /* GraphQL */ `
query OrganizationUsersQueryByUserId($input: OrganizationUsersQueryByUserIdInput!) {
  OrganizationUsersQueryByUserId(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersQueryByOrganizationIdAndUserId = /* GraphQL */ `
query OrganizationUsersQueryByOrganizationIdAndUserId($input: OrganizationUsersQueryByOrganizationIdAndUserIdInput!) {
  OrganizationUsersQueryByOrganizationIdAndUserId(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersQueryByUserIdAndOrganizationId = /* GraphQL */ `
query OrganizationUsersQueryByUserIdAndOrganizationId($input: OrganizationUsersQueryByUserIdAndOrganizationIdInput!) {
  OrganizationUsersQueryByUserIdAndOrganizationId(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





export const OrganizationUsersQueryByOrganizationIdAndRole = /* GraphQL */ `
query OrganizationUsersQueryByOrganizationIdAndRole($input: OrganizationUsersQueryByOrganizationIdAndRoleInput!) {
  OrganizationUsersQueryByOrganizationIdAndRole(input: $input) {
    StatusCode
    Message
    Data {
      userId
      organizationId
      role
      status
      invitedBy
      createdAt
      updatedAt
    }
  }
}
`;





// The operations above already include all queries generated by the schema