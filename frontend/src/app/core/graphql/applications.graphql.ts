// Auto-generated GraphQL operations for Applications
// Do not edit manually. Generated by generate.py

    export const ApplicationsCreateMutation = /* GraphQL */ `
    mutation ApplicationsCreate($input: ApplicationsCreateInput!) {
  ApplicationsCreate(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsUpdateMutation = /* GraphQL */ `
    mutation ApplicationsUpdate($input: ApplicationsUpdateInput!) {
  ApplicationsUpdate(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsDeleteMutation = /* GraphQL */ `
    mutation ApplicationsDelete($id: ID!) {
  ApplicationsDelete(id: $id) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsQueryById = /* GraphQL */ `
    query ApplicationsQueryById($input: ApplicationsQueryByIdInput!) {
  ApplicationsQueryById(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsQueryByName = /* GraphQL */ `
    query ApplicationsQueryByName($input: ApplicationsQueryByNameInput!) {
  ApplicationsQueryByName(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsQueryByBoth = /* GraphQL */ `
    query ApplicationsQueryByBoth($input: ApplicationsQueryByBothInput!) {
  ApplicationsQueryByBoth(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsQueryByStatus = /* GraphQL */ `
    query ApplicationsQueryByStatus($input: ApplicationsQueryByStatusInput!) {
  ApplicationsQueryByStatus(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    export const ApplicationsQueryByType = /* GraphQL */ `
    query ApplicationsQueryByType($input: ApplicationsQueryByTypeInput!) {
  ApplicationsQueryByType(input: $input) {
    StatusCode
    Message
    Data {
      id
      name
      description
      type
      status
      createdAt
      updatedAt
    }
  }
}
    `;

// For each secondary index, generate a query operation
 