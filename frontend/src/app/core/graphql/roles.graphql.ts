// Auto-generated GraphQL operations for Roles
// Do not edit manually. Generated by generate.py



  
    export const RolesCreateMutation = /* GraphQL */ `
    mutation RolesCreate($input: RolesCreateInput!) {
  RolesCreate(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesUpdateMutation = /* GraphQL */ `
    mutation RolesUpdate($input: RolesUpdateInput!) {
  RolesUpdate(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesDeleteMutation = /* GraphQL */ `
    mutation RolesDelete($id: ID!) {
  RolesDelete(id: $id) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesQueryById = /* GraphQL */ `
    query RolesQueryById($input: RolesQueryByIdInput!) {
  RolesQueryById(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesQueryByRoleType = /* GraphQL */ `
    query RolesQueryByRoleType($input: RolesQueryByRoleTypeInput!) {
  RolesQueryByRoleType(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesQueryByBoth = /* GraphQL */ `
    query RolesQueryByBoth($input: RolesQueryByBothInput!) {
  RolesQueryByBoth(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  

  
    export const RolesQueryByUserId = /* GraphQL */ `
    query RolesQueryByUserId($input: RolesQueryByUserIdInput!) {
  RolesQueryByUserId(input: $input) {
    StatusCode
    Message
    Data {
      id
      userId
      roleType
      status
      createdAt
      updatedAt
    }
  }
}
    `;
    
  


// For each secondary index, generate a query operation

  
  
 