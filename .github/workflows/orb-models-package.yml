name: orb-models-package

on:
  push:
    branches: [ main, develop, organizations-feature ]
    paths:
      - 'backend/packages/orb-models/**'
      - 'schemas/**'  # Changes to schemas affect generated models
      - '.github/workflows/orb-models-package.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/packages/orb-models/**'
      - 'schemas/**'
      - '.github/workflows/orb-models-package.yml'
  workflow_dispatch:

jobs:
  test:
    name: Test Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          cd backend/packages/orb-models
          python -m pip install --upgrade pip
          pip install -e .[test,dev]
      
      - name: Lint with black and isort
        run: |
          cd backend/packages/orb-models
          black --check .
          isort --check-only .
      
      - name: Type check with mypy
        run: |
          cd backend/packages/orb-models
          mypy orb_models --ignore-missing-imports
      
      - name: Run tests
        run: |
          cd backend/packages/orb-models
          pytest tests/ -v --cov=orb_models --cov-report=xml --cov-report=html
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/packages/orb-models/coverage.xml
          flags: orb-models
          name: orb-models-${{ matrix.python-version }}

  validate-generation:
    name: Validate Model Generation
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install generation dependencies
        run: |
          cd schemas
          pip install -r requirements.txt
      
      - name: Test generate.py runs without errors
        run: |
          cd schemas
          python generate.py --dry-run || true  # For now, allow failures
      
      - name: Check for generated files (future state)
        run: |
          echo "After migration, this will check that models are generated correctly"
          # ls -la backend/packages/orb-models/orb_models/models/
          # ls -la backend/packages/orb-models/orb_models/enums/

  build:
    name: Build Package
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      
      - name: Build package
        run: |
          cd backend/packages/orb-models
          python -m build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: orb-models-dist
          path: backend/packages/orb-models/dist/
          retention-days: 7

  integration-test:
    name: Integration Test
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: orb-models-dist
          path: dist/
      
      - name: Install from wheel
        run: |
          python -m pip install --upgrade pip
          pip install dist/*.whl
      
      - name: Test import
        run: |
          python -c "import orb_models; print(f'Successfully imported orb_models {orb_models.__version__}')"
          python -c "from orb_models import models, enums, repository; print('Submodules imported successfully')"