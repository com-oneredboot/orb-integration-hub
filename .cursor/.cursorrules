{
  "prompts": [
    {
      "query": "Review the project structure and key components.",
      "response": "The project is Orb Integration Hub, a serverless app using AWS AppSync, DynamoDB, TypeScript/Python. Key directories are `backend/` (Python, AWS SAM), `frontend/` (Angular, TypeScript), `schemas/` (YAML defs, Jinja templates, Python generator), and `docs/` (Markdown docs). Schema changes require running `python schemas/generate.py`."
    },
    {
      "query": "What is the schema generation process?",
      "response": "Schemas are defined in `schemas/entities/*.yml`. The `schemas/generate.py` script uses Jinja templates from `schemas/templates/*.jinja` to generate Python models (`backend/src/models`), TypeScript models (`frontend/src/models`), GraphQL schema (`backend/infrastructure/cloudformation/`), and DynamoDB CloudFormation (`backend/infrastructure/cloudformation/dynamodb.yml`). Run `python schemas/generate.py` after modifying schemas or templates. See `docs/schema.md` for details."
    },
    {
      "query": "How do I modify data models?",
      "response": "NEVER edit generated model files in `backend/src/models/` or `frontend/src/models/` directly. Instead, modify the YAML definitions in `schemas/entities/`, potentially update templates in `schemas/templates/`, and then run `python schemas/generate.py` to regenerate all necessary code and configuration. See `docs/schema.md` for details."
    },
    {
      "query": "Where is the main documentation?",
      "response": "The main project documentation is in the `docs/` directory. Key files include `project.md`, `error-handling.md`, and `error-codes.md`. The root `README.md` also provides a high-level overview and links to specific docs."
    },
    {
      "query": "Where are the backend Python models defined?",
      "response": "Backend Python models are generated by the schema script and located in `backend/src/models/`. They are defined as dataclasses."
    },
    {
      "query": "Where are the frontend TypeScript models defined?",
      "response": "Frontend TypeScript models are generated by the schema script and located in `frontend/src/models/`. They are defined as interfaces or classes."
    },
    {
      "query": "How do I run backend tests?",
      "response": "Backend tests are likely located in `backend/tests/`. Navigate to the `backend/` directory and run `pytest` (assuming pytest is used). Check `docs/development.md` for specific instructions."
    },
    {
      "query": "How do I run frontend tests?",
      "response": "Frontend tests are located in `frontend/src/`. Navigate to the `frontend/` directory and run `npm run test`. See `docs/development.md` for details."
    },
    {
      "query": "How is development work organized?",
      "response": "Development is organized by features, listed in `docs/features/REGISTRY.md`. Each feature should have its own documentation (using `docs/features/feature-template.md`). The `frontend-implementation-plan.md` and `frontend-todo.md` are structured with an initial setup phase followed by sections for each active feature."
    },
    {
      "query": "Where is the frontend design plan?",
      "response": "The frontend design plan, outlining architecture, UI/UX principles, key views, and technology stack, is located in `docs/frontend-design.md`. See also the [Development Guide](docs/development.md) for workflow details."
    },
    {
      "query": "Where is the frontend implementation plan?",
      "response": "The frontend implementation plan, outlining development phases, tasks, and milestones based on the design plan, is located in `docs/frontend-implementation-plan.md`."
    },
    {
      "query": "Where is the frontend todo list?",
      "response": "The frontend development checklist/todo list, derived from the implementation plan, is located in `docs/frontend-todo.md`."
    },
    {
      "query": "How is the application deployed?",
      "response": "Deployment is managed via GitHub Actions. The workflow files are located in the `.github/workflows/` directory. Key files include `deploy-backend.yml` and `deploy-frontend.yml`. Check the `README.md` for a quick summary."
    },
    {
      "query": "How do I set up the development environment?",
      "response": "Refer to the `docs/development.md` guide for prerequisites, initial setup steps, running the application locally, testing, and other development workflows."
    }
  ],
  "priorityDirectories": [
    "schemas/",
    "backend/src/",
    "frontend/src/",
    "docs/"
  ]
} 