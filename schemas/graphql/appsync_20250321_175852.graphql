# AppSync GraphQL Schema - Generated Code
# Do NOT modify directly

# Common enums
enum ApplicationEnvironments @aws_api_key @aws_cognito_user_pools {
  DEVELOPMENT
  TESTING
  STAGING
  PRODUCTION
}

enum Status @aws_api_key @aws_cognito_user_pools {
  ACTIVE
  PENDING
  SUSPENDED
  INACTIVE
}

enum UserGroups @aws_api_key @aws_cognito_user_pools {
  UNKNOWN
  USER
  CUSTOMER
  CLIENT
  EMPLOYEE
  OWNER
}

# Model definitions 

# Model: 



# Model: 



# Model: 



# Model: 




# Nested complex types
type ApplicationRole @aws_api_key @aws_cognito_user_pools {
  name: String!
  description: String
}

type ApplicationEnvironmentRoles @aws_api_key @aws_cognito_user_pools {
  DEFAULT: [ApplicationRole!]!
  DEVELOPMENT: [ApplicationRole!]
  TESTING: [ApplicationRole!]
  STAGING: [ApplicationRole!]
  PRODUCTION: [ApplicationRole!]
}

type ApplicationSettings @aws_api_key @aws_cognito_user_pools {
  debug_level: String
}

type ApplicationEnvironmentSettings @aws_api_key @aws_cognito_user_pools {
  DEFAULT: ApplicationSettings!
  DEVELOPMENT: ApplicationSettings
  TESTING: ApplicationSettings
  STAGING: ApplicationSettings
  PRODUCTION: ApplicationSettings
}

# Base types
type Application @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  user_id: String!
  status: String!
  name: String!
  description: String
  created_at: String!
  deleted_at: String
}

type ApplicationResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application: Application
}

type ApplicationsResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  applications: [Application]
}

type ApplicationUser @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  user_id: String!
  roles: ApplicationEnvironmentRoles!
  status: String!
  created_at: String!
  deleted_at: String
}

type ApplicationUserResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application_user: ApplicationUser
}

type SMSVerificationResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  code: Float
}

# Input types
input ApplicationCreateInput {
  application_id: String!
  user_id: String!
  status: String!
  name: String!
  description: String
  created_at: String!
  settings: ApplicationSettingsInput!
  roles: ApplicationEnvironmentRolesInput!
}

input ApplicationQueryInput {
  application_id: String
  user_id: String
}

input ApplicationUpdateInput {
  application_id: String!
  status: String
  name: String
  description: String
  settings: ApplicationEnvironmentSettingsInput
  roles: ApplicationEnvironmentRolesInput
  deleted_at: String
}

input ApplicationRoleInput {
  name: String!
  description: String
}

input ApplicationEnvironmentRolesInput {
  DEFAULT: [ApplicationRoleInput!]!
  DEVELOPMENT: [ApplicationRoleInput!]
  TESTING: [ApplicationRoleInput!]
  STAGING: [ApplicationRoleInput!]
  PRODUCTION: [ApplicationRoleInput!]
}

input ApplicationSettingsInput {
  debug_level: String
}

input ApplicationEnvironmentSettingsInput {
  DEFAULT: ApplicationSettingsInput!
  DEVELOPMENT: ApplicationSettingsInput
  TESTING: ApplicationSettingsInput
  STAGING: ApplicationSettingsInput
  PRODUCTION: ApplicationSettingsInput
}

input ApplicationUserCreateInput {
  application_id: String!
  user_id: String!
  roles: ApplicationEnvironmentRolesInput!
  status: String!
  created_at: String!
}

input ApplicationUserQueryInput {
  application_id: String
  user_id: String
}

input ApplicationUserUpdateInput {
  application_id: String!
  user_id: String!
  status: String
  roles: ApplicationEnvironmentRolesInput
  deleted_at: String
}

input SMSVerificationInput {
  phone_number: String!
}

# Additional input types for legacy compatibility
# Note: These may be replaced by the model-generated types above

# Root types
type Query {
  # Base queries
  applicationQueryById(input: ApplicationQueryInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUserQueryById(input: ApplicationUserQueryInput!): ApplicationUserResponse! @aws_cognito_user_pools
  applicationQueryByUserId(input: ApplicationQueryInput!): ApplicationsResponse! @aws_cognito_user_pools
  
  # Generated model queries
  
  QueryById(input: QueryInput!): Response! @aws_cognito_user_pools
  
  QueryById(input: QueryInput!): Response! @aws_cognito_user_pools
  
  QueryById(input: QueryInput!): Response! @aws_cognito_user_pools
  
  QueryById(input: QueryInput!): Response! @aws_cognito_user_pools
  
}

type Mutation {
  # Base mutations
  applicationCreate(input: ApplicationCreateInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUpdate(input: ApplicationUpdateInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUserCreate(input: ApplicationUserCreateInput!): ApplicationUserResponse! @aws_cognito_user_pools
  applicationUserUpdate(input: ApplicationUserUpdateInput!): ApplicationUserResponse! @aws_cognito_user_pools
  sendSMSVerificationCode(input: SMSVerificationInput!): SMSVerificationResponse! @aws_cognito_user_pools
  
  # Generated model mutations
  
  Create(input: CreateInput!): Response! @aws_cognito_user_pools
  Update(input: UpdateInput!): Response! @aws_cognito_user_pools
  
  Create(input: CreateInput!): Response! @aws_cognito_user_pools
  Update(input: UpdateInput!): Response! @aws_cognito_user_pools
  
  Create(input: CreateInput!): Response! @aws_cognito_user_pools
  Update(input: UpdateInput!): Response! @aws_cognito_user_pools
  
  Create(input: CreateInput!): Response! @aws_cognito_user_pools
  Update(input: UpdateInput!): Response! @aws_cognito_user_pools
  
}

schema {
  query: Query
  mutation: Mutation
}