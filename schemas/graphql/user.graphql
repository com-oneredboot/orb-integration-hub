# GraphQL schema for User
# Generated from database model
# Do not modify directly

# Enum types
enum UserStatus @aws_api_key @aws_cognito_user_pools {
  ACTIVE
  PENDING
  SUSPENDED
  INACTIVE
  UNKNOWN
}

enum UserGroups @aws_api_key @aws_cognito_user_pools {
  USER
  ADMIN
  DEVELOPER
}

# Main User type
type User @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String!
  email: String!
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [UserGroups!]!
  status: UserStatus!
  created_at: String!
  updated_at: String
}

# Response type for User operations
type UserResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  user: User
}

# Response type for multiple User operations
type UsersResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  users: [User]
}

# Input for User creation
input UserCreateInput @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String!
  email: String!
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [UserGroups!]!
  status: UserStatus!
  created_at: String!
  updated_at: String
}

# Input for User query operations
input UserQueryInput @aws_api_key @aws_cognito_user_pools {
  user_id: String
  email: String
  cognito_id: String
}

# Input for User update operations
input UserUpdateInput @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String
  email: String
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [UserGroups]
  status: UserStatus
  created_at: String
  updated_at: String
}

# Operations for User
# These will be merged with the root Query and Mutation types in the base schema