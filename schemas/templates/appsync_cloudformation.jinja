# --------------------------------------------------- #
AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
  Application Infrastructure - AppSync Stack

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
  CustomerId:
    Default: orb
    Type: String
  ProjectId:
    Default: integration-hub
    Type: String
  TracingIs:
    Default: Active
    Type: String
  SchemaS3Key:
    Type: String
    Description: Name of the GraphQL schema file in S3

# --------------------------------------------------- #
Resources:
  # IAM Roles for AppSync
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/${CustomerId}/${ProjectId}/*'
  
  AppSyncLoggingServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs

  IntegrationHubApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync'
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        UserPoolId: !Sub "resolve:ssm:${CustomerId}-${ProjectId}-${Environment}-cognito-user-pool-id"
        AwsRegion: !Ref AWS::Region
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLoggingServiceRole.Arn
        FieldLogLevel: ALL
        ExcludeVerboseContent: false

  IntegrationHubApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      Description: "API Key for unauthenticated access"
      Expires: 1767211838

  ApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-graphql-key'
      Description: "AppSync API Key for unauthenticated access"
      SecretString: !GetAtt IntegrationHubApiKey.ApiKey

  IntegrationHubSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      DefinitionS3Location: !Sub 's3://${CustomerId}-${ProjectId}-build-templates/${SchemaS3Key}'

  # Data Sources
  # --------------------------------------------------- #
  {%- for table_name, schema in schemas.items() %}

  # {{ schema.table }} Data Source
  {{ schema.table }}DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      Name: {{ schema.table }}DataSource
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
      DynamoDBConfig:
        TableName: !Sub 'resolve:ssm:${CustomerId}-${ProjectId}-${Environment}-{{ schema.table | to_kebab_case }}-table-name'
        AwsRegion: !Ref AWS::Region

  # {{ schema.table }} Resolvers
  # --------------------------------------------------- #
  {% for operation in schema.operations %}
  {{ schema.table }}{{ operation.name }}Resolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: {{ operation.type }}
      FieldName: {{ operation.field }}
      DataSourceName: !GetAtt {{ schema.table }}DataSource.Name
      RequestMappingTemplate: |
        {{ operation.request_template | indent(8) }}
      ResponseMappingTemplate: |
        {{ operation.response_template | indent(8) }}
  {% endfor %}

  {%- endfor %}

  # Index-based Resolvers
  # --------------------------------------------------- #
  {% for resolver in resolver_resources %}
  {{ resolver.table }}{{ resolver.index.name }}Resolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: {{ resolver.type }}
      FieldName: {{ resolver.field }}
      DataSourceName: !GetAtt {{ resolver.data_source }}.Name
      RequestMappingTemplate: |
        {{ resolver.request_template | indent(8) }}
      ResponseMappingTemplate: |
        {{ resolver.response_template | indent(8) }}
  {% endfor %}

# --------------------------------------------------- #
Outputs:
  IntegrationHubApiId:
    Description: The ID of the AppSync API
    Value: !GetAtt IntegrationHubApi.ApiId
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-appsync-api-id

  IntegrationHubApiEndpoint:
    Description: The endpoint URL of the AppSync API
    Value: !GetAtt IntegrationHubApi.GraphQLUrl
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-appsync-api-endpoint 