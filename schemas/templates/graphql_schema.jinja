# GraphQL schema for {{ model_name }}
# Generated from database model
# Do not modify directly

# Main {{ model_name }} type
{% if auth_config and model_name in auth_config.api_key_operations -%}
type {{ model_name }} @aws_api_key @aws_cognito_user_pools {
{%- else -%}
type {{ model_name }} @aws_cognito_user_pools {
{%- endif -%}{%- for attr_name, attr in attributes.items() %}
  {{ attr.graphql_name }}: {{ attr.type }}{% if attr.required %}!{% endif %}
{%- endfor %}
}

# Response type for {{ model_name }} operations
{% if auth_config and model_name+'Response' in auth_config.api_key_operations -%}
type {{ model_name }}Response @aws_api_key @aws_cognito_user_pools {
{%- else -%}
type {{ model_name }}Response @aws_cognito_user_pools {
{%- endif %}
  statusCode: Float!
  message: String
  item: {{ model_name }}
}

# Response type for multiple {{ model_name }} operations
{% if auth_config and model_name+'sResponse' in auth_config.api_key_operations -%}
type {{ model_name }}sResponse @aws_api_key @aws_cognito_user_pools {
{%- else -%}
type {{ model_name }}sResponse @aws_cognito_user_pools {
{%- endif %}
  statusCode: Float!
  message: String
  items: [{{ model_name }}]
}

# Input for {{ model_name }} creation
{% if auth_config and model_name+'CreateInput' in auth_config.api_key_operations -%}
input {{ model_name }}CreateInput @aws_api_key @aws_cognito_user_pools {
{%- else -%}
input {{ model_name }}CreateInput {
{%- endif -%}{%- for attr_name, attr in attributes.items() %}
  {%- if attr_name != partition_key and attr_name != sort_key %}
  {{ attr.graphql_name }}: {{ attr.type }}{% if attr.required %}!{% endif %}
  {%- endif %}
{%- endfor %}
}

# Input for {{ model_name }} query operations
{% if auth_config and model_name+'QueryInput' in auth_config.api_key_operations %}
input {{ model_name }}QueryInput @aws_api_key @aws_cognito_user_pools {
{% else %}
input {{ model_name }}QueryInput {
{% endif %}
  {%- if partition_key %}
  {{ partition_key | to_camel_case }}: {{ attributes[partition_key].type }}
  {%- endif %}
  {%- if sort_key %}
  {{ sort_key | to_camel_case }}: {{ attributes[sort_key].type }}
  {%- endif %}
  {%- for attr_name, attr in attributes.items() %}
  {%- if attr_name != partition_key and attr_name != sort_key %}
  {{ attr.graphql_name }}: {{ attr.type }}
  {%- endif %}
  {%- endfor %}
}

# Input for {{ model_name }} update operations
{% if auth_config and model_name+'UpdateInput' in auth_config.api_key_operations -%}
input {{ model_name }}UpdateInput @aws_api_key @aws_cognito_user_pools {
{%- else -%}
input {{ model_name }}UpdateInput {
{%- endif -%}{%- if partition_key %}
  {{ partition_key | to_camel_case }}: {{ attributes[partition_key].type }}!
{%- endif %}
{%- if sort_key %}
  {{ sort_key | to_camel_case }}: {{ attributes[sort_key].type }}!
{%- endif %}
{%- for attr_name, attr in attributes.items() %}
{%- if attr_name != partition_key and attr_name != sort_key %}
  {{ attr.graphql_name }}: {{ attr.type }}
{%- endif %}
{%- endfor %}
}

# Operations for {{ model_name }}
# These will be merged with the root Query and Mutation types in the base schema

extend type Query {
  {{ table_name | to_camel_case }}QueryById(id: ID!): {{ model_name }}Response
    @aws_auth(cognito_groups: ["admin"])
    {%- if auth_config and auth_config.api_key_operations and "{{ table_name }}QueryById" in auth_config.api_key_operations %}
    @aws_api_key
    {%- endif %}
  
  {{ table_name | to_camel_case }}Query(input: {{ model_name }}QueryInput): {{ model_name }}sResponse
    @aws_auth(cognito_groups: ["admin"])
    {%- if auth_config and auth_config.api_key_operations and "{{ table_name }}Query" in auth_config.api_key_operations %}
    @aws_api_key
    {%- endif %}
}

extend type Mutation {
  {{ table_name | to_camel_case }}Create(input: {{ model_name }}CreateInput!): {{ model_name }}Response
    @aws_auth(cognito_groups: ["admin"])
    {%- if auth_config and auth_config.api_key_operations and "{{ table_name }}Create" in auth_config.api_key_operations %}
    @aws_api_key
    {%- endif %}
  
  {{ table_name | to_camel_case }}Update(id: ID!, input: {{ model_name }}UpdateInput!): {{ model_name }}Response
    @aws_auth(cognito_groups: ["admin"])
    {%- if auth_config and auth_config.api_key_operations and "{{ table_name }}Update" in auth_config.api_key_operations %}
    @aws_api_key
    {%- endif %}
  
  {{ table_name | to_camel_case }}Delete(id: ID!): {{ model_name }}Response
    @aws_auth(cognito_groups: ["admin"])
    {%- if auth_config and auth_config.api_key_operations and "{{ table_name }}Delete" in auth_config.api_key_operations %}
    @aws_api_key
    {%- endif %}
}