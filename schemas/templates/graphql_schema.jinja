"""
Base GraphQL schema.
Generated at {{ timestamp }}.

This schema follows these conventions:
- Type names: PascalCase (e.g., Application)
- Field names: camelCase (e.g., applicationId)
- Input types: PascalCase with Input suffix (e.g., ApplicationRoleInput)
- Response types: PascalCase with Response suffix (e.g., ApplicationRoleResponse)
- List response types: PascalCase with ListResponse suffix (e.g., ApplicationRoleListResponse)
- Query operations: PascalCase with Query suffix (e.g., ApplicationRoleQuery)
- Mutation operations: PascalCase with action suffix (e.g., ApplicationRoleCreate)
- Response fields: PascalCase (e.g., StatusCode, Message, Data)

Authentication is configured per operation using authConfig in the schema files.
Operations can use either API key authentication (@aws_api_key) or Cognito user pool authentication (@aws_auth).
The default is Cognito user pool authentication for the admin group.
"""

# Schema Definition
schema {
  query: Query
  mutation: Mutation
}

# Enums
{%- include 'enums.jinja' -%}

# GraphQL Types
{%- include 'graphql_schema_type.jinja' -%}

# Base types
{%- include 'base_types.jinja' -%}

# Queries
type Query {
{%- include 'graphql_schema_queries.jinja' %}
}

# Mutations
type Mutation {
{%- include 'graphql_schema_mutations.jinja' %}
}

{%- for schema in table_schemas.values() %}
  {# Collect all unique decorators for ListResponse #}
  {%- set list_response_decorators = [] %}
  {%- for operation in schema.operations if operation.type == 'Query' %}
    {%- for d in operation.response_auth_directives %}
      {%- if d not in list_response_decorators %}
        {%- do list_response_decorators.append(d) %}
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
  type {{ schema.name }}ListResponse{% if list_response_decorators|length > 0 %} {{ list_response_decorators|join(' ') }}{% endif %} {
    StatusCode: Int!
    Message: String!
    Data: [{{ schema.name }}]
  }
{%- endfor %}

{%- for schema in table_schemas.values() %}
  {%- for operation in schema.operations %}
    {%- if operation.type != 'Query' %}
      {%- set response_type_name = operation.field + 'Response' %}
      type {{ response_type_name }}{% if operation.response_auth_directives and operation.response_auth_directives|length > 0 %} {{ operation.response_auth_directives|join(' ') }}{% endif %} {
        StatusCode: Int!
        Message: String!
        Data: {{ schema.name }}
      }
    {%- endif %}
  {%- endfor %}
{%- endfor %}
