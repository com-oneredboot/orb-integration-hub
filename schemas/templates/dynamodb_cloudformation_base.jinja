# --------------------------------------------------- #
# DynamoDB CloudFormation Template
# Generated at {{ timestamp }}
#
# This template follows these conventions:
# - Table names: snake_case (e.g., application_users)
# - Resource names: PascalCase (e.g., ApplicationRolesTable)
# - Parameter names: PascalCase with Name/Arn suffix (e.g., ApplicationRolesTableName)
# - Export names: PascalCase with TableName/TableArn suffix (e.g., ApplicationRolesTableName)
#
# All tables use:
# - PAY_PER_REQUEST billing mode
# - Standard environment tags
# - SSM parameters for table names and ARNs
# --------------------------------------------------- #

AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
 Application Infrastructure - DynamoDB Tables

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
    Description: Environment name (dev, staging, prod)
  CustomerId:
    Default: orb
    Type: String
    Description: Customer identifier
  ProjectId:
    Default: integration-hub
    Type: String
    Description: Project identifier
  TracingIs:
    Default: Active
    Type: String
    Description: Whether tracing is enabled

# --------------------------------------------------- #
Resources:
  {% for resource_name, schema, table_name in schemas.items() %}
  {{ resource_name}}:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-{{ table_name }}
      AttributeDefinitions:
        {% for attr in schema.attributes %}
        - AttributeName: {{ attr.name }}
          AttributeType: {{ attr.type }}
        {% endfor %}
      KeySchema:
        - AttributeName: {{ schema.partition_key }}
          KeyType: HASH
        {% if schema.sort_key %}
        - AttributeName: {{ schema.sort_key }}
          KeyType: RANGE
        {% endif %}
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Billable
          Value: !Sub ${Environment}-${CustomerId}-${ProjectId}
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  {{ table_name | to_pascal_case }}TableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Environment}-${CustomerId}-${ProjectId}-{{ table_name }}-table-name
      Type: String
      Value: !Ref {{ table_name | to_pascal_case }}Table

  {{ table_name | to_pascal_case }}TableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${Environment}-${CustomerId}-${ProjectId}-{{ table_name }}-table-arn
      Type: String
      Value: !GetAtt {{ table_name | to_pascal_case }}Table.Arn
  {% endfor %}

# --------------------------------------------------- #
Outputs:
  {% for table_name, schema in schemas.items() %}
  {{ table_name | to_pascal_case }}TableName:
    Description: {{ table_name }} Table Name
    Value: !Ref {{ table_name | to_pascal_case }}Table
    Export:
      Name: !Sub ${AWS::StackName}-{{ table_name }}-table-name

  {{ table_name | to_pascal_case }}TableArn:
    Description: {{ table_name }} Table ARN
    Value: !GetAtt {{ table_name | to_pascal_case }}Table.Arn
    Export:
      Name: !Sub ${AWS::StackName}-{{ table_name }}-table-arn
  {% endfor %}