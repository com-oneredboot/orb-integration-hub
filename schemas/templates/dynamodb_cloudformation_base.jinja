# --------------------------------------------------- #
AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
 Application Infrastructure - DynamoDB Tables

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
  CustomerId:
    Default: orb
    Type: String
  ProjectId:
    Default: integration-hub
    Type: String
  TracingIs:
    Default: Active
    Type: String

# --------------------------------------------------- #
Resources:
  {% for schema in schemas %}
  # {{ schema.table|capitalize }} Table
  {{ schema.table|capitalize }}Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        {%- set all_attrs = [] -%}
        {%- if schema['model']['keys']['primary']['partition'] -%}
          {%- set _ = all_attrs.append(schema['model']['keys']['primary']['partition']) -%}
        {%- endif -%}
        {%- if schema['model']['keys']['primary'].get('sort') -%}
          {%- set _ = all_attrs.append(schema['model']['keys']['primary']['sort']) -%}
        {%- endif -%}
        {%- if schema['model']['keys'].get('secondary') -%}
          {%- for idx in schema['model']['keys']['secondary'] -%}
            {%- if idx['partition'] and idx['partition'] not in all_attrs -%}
              {%- set _ = all_attrs.append(idx['partition']) -%}
            {%- endif -%}
            {%- if idx.get('sort') and idx['sort'] not in all_attrs -%}
              {%- set _ = all_attrs.append(idx['sort']) -%}
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
        {%- for attr in all_attrs %}
        - AttributeName: {{ attr }}
          AttributeType: S
        {%- endfor %}
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: {{ schema['model']['keys']['primary']['partition'] }}
          KeyType: HASH
        {%- if schema['model']['keys']['primary'].get('sort') %}
        - AttributeName: {{ schema['model']['keys']['primary']['sort'] }}
          KeyType: RANGE
        {%- endif %}
      {%- if schema['model']['keys'].get('secondary') %}
        {%- set gsis = [] -%}
        {%- set lsis = [] -%}
        {%- for idx in schema['model']['keys']['secondary'] -%}
          {%- if idx['type'] == 'GSI' -%}
            {%- set _ = gsis.append(idx) -%}
          {%- elif idx['type'] == 'LSI' -%}
            {%- set _ = lsis.append(idx) -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if gsis %}
      GlobalSecondaryIndexes:
        {%- for idx in gsis %}
        - IndexName: {{ idx['name'] }}
          KeySchema:
            - AttributeName: {{ idx['partition'] }}
              KeyType: HASH
            {%- if idx.get('sort') %}
            - AttributeName: {{ idx['sort'] }}
              KeyType: RANGE
            {%- endif %}
          Projection:
            ProjectionType: {{ idx['projection_type'] }}
            {%- if idx['projection_type'] == 'INCLUDE' and idx.get('projected_attributes') %}
            NonKeyAttributes:
              {%- for attr in idx['projected_attributes'] %}
              - {{ attr }}
              {%- endfor %}
            {%- endif %}
        {%- endfor %}
        {%- endif %}
        {%- if lsis %}
      LocalSecondaryIndexes:
        {%- for idx in lsis %}
        - IndexName: {{ idx['name'] }}
          KeySchema:
            - AttributeName: {{ schema['model']['keys']['primary']['partition'] }}
              KeyType: HASH
            {%- if idx.get('sort') %}
            - AttributeName: {{ idx['sort'] }}
              KeyType: RANGE
            {%- endif %}
          Projection:
            ProjectionType: {{ idx['projection_type'] }}
            {%- if idx['projection_type'] == 'INCLUDE' and idx.get('projected_attributes') %}
            NonKeyAttributes:
              {%- for attr in idx['projected_attributes'] %}
              - {{ attr }}
              {%- endfor %}
            {%- endif %}
        {%- endfor %}
        {%- endif %}
      {%- endif %}
      TableName: !Sub '${CustomerId}-${ProjectId}-${Environment}-{{ schema.table }}'
      Tags:
        - Key: Billable
          Value: "true"
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  # Parameter Store for {{ schema.table|capitalize }} table name
  {{ schema.table|capitalize }}TableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-{{ schema.table }}-table-name'
      Type: String
      Value: !Ref {{ schema.table|capitalize }}Table
      Description: DynamoDB {{ schema.table|capitalize }} Table Name
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  # Parameter Store for {{ schema.table|capitalize }} table ARN
  {{ schema.table|capitalize }}TableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-{{ schema.table }}-table-arn'
      Type: String
      Value: !GetAtt {{ schema.table|capitalize }}Table.Arn
      Description: DynamoDB {{ schema.table|capitalize }} Table Arn
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId
  {% endfor %}