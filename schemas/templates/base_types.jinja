{% for schema_name, schema in table_schemas.items() %}
type {{ schema.name }} {
{% for field_name, field_type in schema.fields.items() %}  {{ field_name }}: {{ field_type|graphql_type }}
{% endfor %}}

input {{ schema.name }}CreateInput {
{% for field_name, field_type in schema.fields.items() %}  {{ field_name }}: {{ field_type|graphql_type }}
{% endfor %}}

input {{ schema.name }}UpdateInput {
{% for field_name, field_type in schema.fields.items() %}  {{ field_name }}: {{ field_type|graphql_type }}
{% endfor %}}

input {{ schema.name }}DeleteInput {
  {{ schema.partition_key }}: {{ schema.fields[schema.partition_key]|graphql_type }}
{% if schema.sort_key and schema.sort_key != 'None' %}  {{ schema.sort_key }}: {{ schema.fields[schema.sort_key]|graphql_type }}
{% endif %}}

input {{ schema.name }}DisableInput {
  {{ schema.partition_key }}: {{ schema.fields[schema.partition_key]|graphql_type }}
{% if schema.sort_key and schema.sort_key != 'None' %}  {{ schema.sort_key }}: {{ schema.fields[schema.sort_key]|graphql_type }}
{% endif %}}

{%- set seen_indexes = [] %}
{%- for index in schema.indexes %}
  {%- if index.sort %}
    {%- set input_name = schema.name ~ 'QueryBy' ~ index.partition|to_pascal_case ~ 'And' ~ index.sort|to_pascal_case ~ 'Input' %}
  {%- else %}
    {%- set input_name = schema.name ~ 'QueryBy' ~ index.partition|to_pascal_case ~ 'Input' %}
  {%- endif %}
  {% if input_name not in seen_indexes %}input {{ input_name }} {
  {{ index.partition }}: {{ schema.fields[index.partition]|graphql_type }}
{% if index.sort %}  {{ index.sort }}: {{ schema.fields[index.sort]|graphql_type }}
{% endif %}}

{% set _ = seen_indexes.append(input_name) %}{% endif %}
{%- endfor %}

type {{ schema.name }}Response {
  StatusCode: Int!
  Message: String!
  Data: {{ schema.name }}
}

type {{ schema.name }}ListResponse {
  StatusCode: Int!
  Message: String!
  Data: [{{ schema.name }}]
}
{% endfor -%}