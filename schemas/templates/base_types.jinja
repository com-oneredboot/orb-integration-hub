{% for schema_name, schema in table_schemas.items() %}

input {{ schema.name }}CreateInput {
{% for field_name, field_type in schema.fields.items() %}  {{ field_name }}: {{ field_type|graphql_type }}
{% endfor %}}

input {{ schema.name }}UpdateInput {
{% for field_name, field_type in schema.fields.items() %}  {{ field_name }}: {{ field_type|graphql_type }}
{% endfor %}}

input {{ schema.name }}DeleteInput {
  {{ schema.partition_key }}: {{ schema.fields[schema.partition_key]|graphql_type }}
{% if schema.sort_key and schema.sort_key != 'None' %}  {{ schema.sort_key }}: {{ schema.fields[schema.sort_key]|graphql_type }}
{% endif %}}

input {{ schema.name }}DisableInput {
  {{ schema.partition_key }}: {{ schema.fields[schema.partition_key]|graphql_type }}
{% if schema.sort_key and schema.sort_key != 'None' %}  {{ schema.sort_key }}: {{ schema.fields[schema.sort_key]|graphql_type }}
{% endif %}}

{%- set seen_indexes = [] %}
{%- for index in schema.indexes %}
{%- set input_name = schema.name ~ 'QueryBy' ~ index.partition|to_pascal_case ~ 'Input' %}
{% if input_name not in seen_indexes %}input {{ input_name }} {
  {{ index.partition }}: {{ schema.fields[index.partition]|graphql_type }}
}
{% set _ = seen_indexes.append(input_name) %}{% endif %}
{%- if index.sort and index.sort != 'None' %}
{%- set input_name_and = schema.name ~ 'QueryBy' ~ index.partition|to_pascal_case ~ 'And' ~ index.sort|to_pascal_case ~ 'Input' %}
{% if input_name_and not in seen_indexes %}input {{ input_name_and }} {
  {{ index.partition }}: {{ schema.fields[index.partition]|graphql_type }}
  {{ index.sort }}: {{ schema.fields[index.sort]|graphql_type }}
}
{% set _ = seen_indexes.append(input_name_and) %}{% endif %}
{%- endif %}
{%- endfor %}
{%- endfor %}