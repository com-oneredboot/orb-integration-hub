{% for schema in schemas.values() if schema.type == 'lambda' %}
  {{ schema.name }}Resolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - {{ schema.name }}LambdaDataSource
      - IntegrationHubSchema
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation  # or Query, adjust as needed
      FieldName: {{ schema.name }}  # or the actual field name
      DataSourceName: {{ schema.name }}LambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": $util.toJson($ctx.args)
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
{% endfor %}

{# Lambda-DynamoDB resolvers - these have multiple operations like DynamoDB types #}
{% for schema in schemas.values() if schema.type == 'lambda-dynamodb' %}
  {%- if schema.operations is defined and schema.operations|length > 0 %}
    {%- set all_ops = schema.operations %}
  {%- else %}
    {# Default operations if none are defined #}
    {% set all_ops = [
      {"name": "Create", "type": "Mutation", "field": schema.name + 'Create'},
      {"name": "Update", "type": "Mutation", "field": schema.name + 'Update'},
      {"name": "Delete", "type": "Mutation", "field": schema.name + 'Delete'},
      {"name": "Disable", "type": "Mutation", "field": schema.name + 'Disable'},
      {"name": "QueryBy" + schema.partition_key|to_pascal_case, "type": "Query", "field": schema.name + 'QueryBy' + schema.partition_key|to_pascal_case}
    ] %}
    {# Add queries for secondary indexes #}
    {% if schema.secondary_indexes %}
      {% for index in schema.secondary_indexes %}
        {% set _ = all_ops.append({"name": "QueryBy" + index.partition|to_pascal_case, "type": "Query", "field": schema.name + 'QueryBy' + index.partition|to_pascal_case}) %}
      {% endfor %}
    {% endif %}
  {%- endif %}
  
  {%- for operation in all_ops %}
  {{ schema.name }}{{ operation.name }}Resolver:
    Type: AWS::AppSync::Resolver
    DependsOn:
      - {{ schema.name }}LambdaDataSource
      - IntegrationHubSchema
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: {{ operation.type }}
      FieldName: {{ operation.field }}
      DataSourceName: {{ schema.name }}LambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "info": {
              "fieldName": "{{ operation.field }}",
              "parentTypeName": "{{ operation.type }}",
              "selectionSetList": $util.toJson($ctx.info.selectionSetList),
              "selectionSetGraphQL": $util.toJson($ctx.info.selectionSetGraphQL)
            },
            "arguments": $util.toJson($ctx.args),
            "identity": $util.toJson($ctx.identity),
            "source": $util.toJson($ctx.source),
            "request": $util.toJson($ctx.request),
            "prev": $util.toJson($ctx.prev),
            "stash": $util.toJson($ctx.stash)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  {% endfor %}
{% endfor %}