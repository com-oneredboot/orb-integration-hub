# GraphQL schema for Applications
# Generated from database model
# Do not modify directly

# Main Applications type
type Applications @aws_cognito_user_pools {
  application_id: string!
  name: string!
  description: string
  status: string!
  created_at: number!
  updated_at: number
  user_id: string!
}

# Response type for Applications operations
type ApplicationsResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  item: Applications
}

# Response type for multiple Applications operations
type ApplicationssResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  items: [Applications]
}

# Input for Applications creation
input ApplicationsCreateInput {
  name: string!
  description: string
  status: string!
  created_at: number!
  updated_at: number
  user_id: string!
}

# Input for Applications query operations

input ApplicationsQueryInput {

  application_id: String
  name: string
  description: string
  status: string
  created_at: number
  updated_at: number
  user_id: string
}

# Input for Applications update operations
input ApplicationsUpdateInput {
  application_id: String!
  name: string
  description: string
  status: string
  created_at: number
  updated_at: number
  user_id: string
}

# Operations for Applications
# These will be merged with the root Query and Mutation types in the base schema

extend type Query {
  applicationsQueryById(id: ID!): ApplicationsResponse
    @aws_auth(cognito_groups: ["admin"])
  
  applicationsQuery(input: ApplicationsQueryInput): ApplicationssResponse
    @aws_auth(cognito_groups: ["admin"])
}

extend type Mutation {
  applicationsCreate(input: ApplicationsCreateInput!): ApplicationsResponse
    @aws_auth(cognito_groups: ["admin"])
  
  applicationsUpdate(id: ID!, input: ApplicationsUpdateInput!): ApplicationsResponse
    @aws_auth(cognito_groups: ["admin"])
  
  applicationsDelete(id: ID!): ApplicationsResponse
    @aws_auth(cognito_groups: ["admin"])
}