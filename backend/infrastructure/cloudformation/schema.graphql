# AppSync GraphQL Schema - Generated Code
# Do NOT modify directly

# Common enums
enum ApplicationEnvironments @aws_api_key @aws_cognito_user_pools {
  DEVELOPMENT
  TESTING
  STAGING
  PRODUCTION
}

enum Status @aws_api_key @aws_cognito_user_pools {
  ACTIVE
  PENDING
  SUSPENDED
  INACTIVE
}

enum UserGroups @aws_api_key @aws_cognito_user_pools {
  UNKNOWN
  USER
  CUSTOMER
  CLIENT
  EMPLOYEE
  OWNER
}

# Model definitions 

# Model: Role
# GraphQL schema for Role
# Generated from database model
# Do not modify directly

# Main Role type
type Role @aws_cognito_user_pools {
  role_id: String!
  user_id: String!
  application_id: String!
  role_name: String!
  role_type: String!
  permissions: [String!]!
  created_at: Float!
  updated_at: Float!
  active: Boolean!
}

# Response type for Role operations
type RoleResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  role: Role
}

# Response type for multiple Role operations
type RolesResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  roles: [Role]
}

# Input for Role creation
input RoleCreateInput {
  role_id: String!
  user_id: String!
  application_id: String!
  role_name: String!
  role_type: String!
  permissions: [String!]!
  created_at: Float!
  updated_at: Float!
  active: Boolean!
}

# Input for Role query operations

input RoleQueryInput {

  role_id: String
  application_id: String
  user_id: String
  role_type: String
}

# Input for Role update operations
input RoleUpdateInput {
  role_id: String!
  application_id: String!
  user_id: String
  role_name: String
  role_type: String
  permissions: [String]
  created_at: Float
  updated_at: Float
  active: Boolean
}

# Operations for Role
# These will be merged with the root Query and Mutation types in the base schema


# Model: User
# GraphQL schema for User
# Generated from database model
# Do not modify directly

# Main User type
type User @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String!
  email: String!
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [String!]!
  status: String!
  created_at: Float!
  updated_at: Float
}

# Response type for User operations
type UserResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  user: User
}

# Response type for multiple User operations
type UsersResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  users: [User]
}

# Input for User creation
input UserCreateInput @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String!
  email: String!
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [String!]!
  status: String!
  created_at: Float!
  updated_at: Float
}

# Input for User query operations

input UserQueryInput @aws_api_key @aws_cognito_user_pools {

  user_id: String
  email: String
  cognito_id: String
}

# Input for User update operations
input UserUpdateInput @aws_api_key @aws_cognito_user_pools {
  user_id: String!
  cognito_id: String
  email: String
  phone_number: String
  phone_verified: Boolean
  first_name: String
  last_name: String
  groups: [String]
  status: String
  created_at: Float
  updated_at: Float
}

# Operations for User
# These will be merged with the root Query and Mutation types in the base schema


# Model: Application
# GraphQL schema for Application
# Generated from database model
# Do not modify directly

# Main Application type
type Application @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  name: String!
  description: String
  status: String!
  created_at: Float!
  updated_at: Float
  user_id: String!
}

# Response type for Application operations
type ApplicationResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application: Application
}

# Response type for multiple Application operations
type ApplicationsResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  applications: [Application]
}

# Input for Application creation
input ApplicationCreateInput @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  name: String!
  description: String
  status: String!
  created_at: Float!
  updated_at: Float
  user_id: String!
}

# Input for Application query operations

input ApplicationQueryInput @aws_api_key @aws_cognito_user_pools {

  application_id: String
  user_id: String
}

# Input for Application update operations
input ApplicationUpdateInput @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  name: String
  description: String
  status: String
  created_at: Float
  updated_at: Float
  user_id: String
}

# Operations for Application
# These will be merged with the root Query and Mutation types in the base schema


# Model: Application_user
# GraphQL schema for Application_user
# Generated from database model
# Do not modify directly

# Main Application_user type
type Application_user @aws_cognito_user_pools {
  application_id: String!
  user_id: String!
  status: String!
  created_at: Float!
  updated_at: Float
}

# Response type for Application_user operations
type Application_userResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application_user: Application_user
}

# Response type for multiple Application_user operations
type Application_usersResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application_users: [Application_user]
}

# Input for Application_user creation
input Application_userCreateInput {
  application_id: String!
  user_id: String!
  status: String!
  created_at: Float!
  updated_at: Float
}

# Input for Application_user query operations

input Application_userQueryInput {

  application_id: String
  user_id: String
}

# Input for Application_user update operations
input Application_userUpdateInput {
  application_id: String!
  user_id: String!
  status: String
  created_at: Float
  updated_at: Float
}

# Operations for Application_user
# These will be merged with the root Query and Mutation types in the base schema



# Nested complex types
type ApplicationRole @aws_api_key @aws_cognito_user_pools {
  name: String!
  description: String
}

type ApplicationEnvironmentRoles @aws_api_key @aws_cognito_user_pools {
  DEFAULT: [ApplicationRole!]!
  DEVELOPMENT: [ApplicationRole!]
  TESTING: [ApplicationRole!]
  STAGING: [ApplicationRole!]
  PRODUCTION: [ApplicationRole!]
}

type ApplicationSettings @aws_api_key @aws_cognito_user_pools {
  debug_level: String
}

type ApplicationEnvironmentSettings @aws_api_key @aws_cognito_user_pools {
  DEFAULT: ApplicationSettings!
  DEVELOPMENT: ApplicationSettings
  TESTING: ApplicationSettings
  STAGING: ApplicationSettings
  PRODUCTION: ApplicationSettings
}

# Base types
type Application @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  user_id: String!
  status: String!
  name: String!
  description: String
  created_at: String!
  deleted_at: String
}

type ApplicationResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application: Application
}

type ApplicationsResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  applications: [Application]
}

type ApplicationUser @aws_api_key @aws_cognito_user_pools {
  application_id: String!
  user_id: String!
  roles: ApplicationEnvironmentRoles!
  status: String!
  created_at: String!
  deleted_at: String
}

type ApplicationUserResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  application_user: ApplicationUser
}

type SMSVerificationResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  code: Float
}

# Input types
input ApplicationCreateInput {
  application_id: String!
  user_id: String!
  status: String!
  name: String!
  description: String
  created_at: String!
  settings: ApplicationSettingsInput!
  roles: ApplicationEnvironmentRolesInput!
}

input ApplicationQueryInput {
  application_id: String
  user_id: String
}

input ApplicationUpdateInput {
  application_id: String!
  status: String
  name: String
  description: String
  settings: ApplicationEnvironmentSettingsInput
  roles: ApplicationEnvironmentRolesInput
  deleted_at: String
}

input ApplicationRoleInput {
  name: String!
  description: String
}

input ApplicationEnvironmentRolesInput {
  DEFAULT: [ApplicationRoleInput!]!
  DEVELOPMENT: [ApplicationRoleInput!]
  TESTING: [ApplicationRoleInput!]
  STAGING: [ApplicationRoleInput!]
  PRODUCTION: [ApplicationRoleInput!]
}

input ApplicationSettingsInput {
  debug_level: String
}

input ApplicationEnvironmentSettingsInput {
  DEFAULT: ApplicationSettingsInput!
  DEVELOPMENT: ApplicationSettingsInput
  TESTING: ApplicationSettingsInput
  STAGING: ApplicationSettingsInput
  PRODUCTION: ApplicationSettingsInput
}

input ApplicationUserCreateInput {
  application_id: String!
  user_id: String!
  roles: ApplicationEnvironmentRolesInput!
  status: String!
  created_at: String!
}

input ApplicationUserQueryInput {
  application_id: String
  user_id: String
}

input ApplicationUserUpdateInput {
  application_id: String!
  user_id: String!
  status: String
  roles: ApplicationEnvironmentRolesInput
  deleted_at: String
}

input SMSVerificationInput {
  phone_number: String!
}

# Additional input types for legacy compatibility
# Note: These may be replaced by the model-generated types above

# Root types
type Query {
  # Base queries
  applicationQueryById(input: ApplicationQueryInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUserQueryById(input: ApplicationUserQueryInput!): ApplicationUserResponse! @aws_cognito_user_pools
  applicationQueryByUserId(input: ApplicationQueryInput!): ApplicationsResponse! @aws_cognito_user_pools
  
  # Generated model queries
  
  RoleQueryById(input: RoleQueryInput!): RoleResponse! @aws_cognito_user_pools
  
  UserQueryById(input: UserQueryInput!): UserResponse! @aws_cognito_user_pools
  
  ApplicationQueryById(input: ApplicationQueryInput!): ApplicationResponse! @aws_cognito_user_pools
  
  Application_userQueryById(input: Application_userQueryInput!): Application_userResponse! @aws_cognito_user_pools
  
}

type Mutation {
  # Base mutations
  applicationCreate(input: ApplicationCreateInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUpdate(input: ApplicationUpdateInput!): ApplicationResponse! @aws_cognito_user_pools
  applicationUserCreate(input: ApplicationUserCreateInput!): ApplicationUserResponse! @aws_cognito_user_pools
  applicationUserUpdate(input: ApplicationUserUpdateInput!): ApplicationUserResponse! @aws_cognito_user_pools
  sendSMSVerificationCode(input: SMSVerificationInput!): SMSVerificationResponse! @aws_cognito_user_pools
  
  # Generated model mutations
  
  RoleCreate(input: RoleCreateInput!): RoleResponse! @aws_cognito_user_pools
  RoleUpdate(input: RoleUpdateInput!): RoleResponse! @aws_cognito_user_pools
  
  UserCreate(input: UserCreateInput!): UserResponse! @aws_cognito_user_pools
  UserUpdate(input: UserUpdateInput!): UserResponse! @aws_cognito_user_pools
  
  ApplicationCreate(input: ApplicationCreateInput!): ApplicationResponse! @aws_cognito_user_pools
  ApplicationUpdate(input: ApplicationUpdateInput!): ApplicationResponse! @aws_cognito_user_pools
  
  Application_userCreate(input: Application_userCreateInput!): Application_userResponse! @aws_cognito_user_pools
  Application_userUpdate(input: Application_userUpdateInput!): Application_userResponse! @aws_cognito_user_pools
  
}

schema {
  query: Query
  mutation: Mutation
}