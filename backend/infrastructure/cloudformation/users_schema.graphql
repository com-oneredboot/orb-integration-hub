# GraphQL schema for Users
# Generated from database model
# Do not modify directly

# Main Users type
type Users @aws_cognito_user_pools {
  user_id: string!
  cognito_id: string!
  email: string!
  phone_number: string
  phone_verified: boolean
  first_name: string
  last_name: string
  groups: array!
  status: string!
  created_at: number!
  updated_at: number
}

# Response type for Users operations
type UsersResponse @aws_api_key @aws_cognito_user_pools {
  status_code: Float!
  message: String
  item: Users
}

# Response type for multiple Users operations
type UserssResponse @aws_cognito_user_pools {
  status_code: Float!
  message: String
  items: [Users]
}

# Input for Users creation
input UsersCreateInput {
  cognito_id: string!
  email: string!
  phone_number: string
  phone_verified: boolean
  first_name: string
  last_name: string
  groups: array!
  status: string!
  created_at: number!
  updated_at: number
}

# Input for Users query operations

input UsersQueryInput {

  user_id: String
  cognito_id: string
  email: string
  phone_number: string
  phone_verified: boolean
  first_name: string
  last_name: string
  groups: array
  status: string
  created_at: number
  updated_at: number
}

# Input for Users update operations
input UsersUpdateInput {
  user_id: String!
  cognito_id: string
  email: string
  phone_number: string
  phone_verified: boolean
  first_name: string
  last_name: string
  groups: array
  status: string
  created_at: number
  updated_at: number
}

# Operations for Users
# These will be merged with the root Query and Mutation types in the base schema

extend type Query {
  usersQueryById(id: ID!): UsersResponse
    @aws_auth(cognito_groups: ["admin"])
  
  usersQuery(input: UsersQueryInput): UserssResponse
    @aws_auth(cognito_groups: ["admin"])
}

extend type Mutation {
  usersCreate(input: UsersCreateInput!): UsersResponse
    @aws_auth(cognito_groups: ["admin"])
  
  usersUpdate(id: ID!, input: UsersUpdateInput!): UsersResponse
    @aws_auth(cognito_groups: ["admin"])
  
  usersDelete(id: ID!): UsersResponse
    @aws_auth(cognito_groups: ["admin"])
}