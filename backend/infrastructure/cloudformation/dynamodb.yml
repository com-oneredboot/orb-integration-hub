# --------------------------------------------------- #
AWSTemplateFormatVersion: '2010-09-09'

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: Application Infrastructure

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
  CustomerId:
    Default: orb
    Type: String
  ProjectId:
    Default: integration-hub
    Type: String
  TracingIs:
    Default: Active
    Type: String

# --------------------------------------------------- #
Resources:
  # Applications Table
  ApplicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: application_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: user-id-index # gets all the applications owned by a given user
          KeySchema:
            - AttributeName: user_id
              KeyType: HASH
            - AttributeName: application_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TableName: !Sub "${CustomerId}-${ProjectId}-${Environment}-applications"
      Tags:
        - Key: Billable
          Value: "true"
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  # Application User Roles Table
  ApplicationUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: application_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      TableName: !Sub "${CustomerId}-${ProjectId}-${Environment}-application-users"
      Tags:
        - Key: Billable
          Value: "true"
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  # Users Table
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: cognito_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: cognito-id-index
          KeySchema:
            - AttributeName: cognito_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      TableName: !Sub "${CustomerId}-${ProjectId}-${Environment}-users"
      Tags:
        - Key: Billable
          Value: "true"
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  # Roles Table
  RolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: role_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: role_type
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: role_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: application-id-index
          KeySchema:
            - AttributeName: application_id
              KeyType: HASH
            - AttributeName: role_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: role-type-index
          KeySchema:
            - AttributeName: role_type
              KeyType: HASH
            - AttributeName: role_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TableName: !Sub "${CustomerId}-${ProjectId}-${Environment}-roles"
      Tags:
        - Key: Billable
          Value: "true"
        - Key: CustomerId
          Value: !Ref CustomerId
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectId
          Value: !Ref ProjectId

  # Parameter Store Resources
  ApplicationsTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-applications-table-name"
      Type: String
      Value: !Ref ApplicationsTable
      Description: DynamoDB Applications Table Name
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  ApplicationsTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-applications-table-arn"
      Type: String
      Value: !GetAtt ApplicationsTable.Arn
      Description: DynamoDB Applications Table Arn
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  ApplicationUsersTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-application-users-table-name"
      Type: String
      Value: !Ref ApplicationUsersTable
      Description: DynamoDB Application Users Table Name
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  ApplicationUsersTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-application-users-table-arn"
      Type: String
      Value: !GetAtt ApplicationUsersTable.Arn
      Description: DynamoDB Application Users Table Arn
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  UsersTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-users-table-name"
      Type: String
      Value: !Ref UsersTable
      Description: DynamoDB Users Table Name
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  UsersTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-users-table-arn"
      Type: String
      Value: !GetAtt UsersTable.Arn
      Description: DynamoDB Users Table Arn
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  RolesTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-roles-table-name"
      Type: String
      Value: !Ref RolesTable
      Description: DynamoDB Roles Table Name
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId

  RolesTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${CustomerId}-${ProjectId}-${Environment}-roles-table-arn"
      Type: String
      Value: !GetAtt RolesTable.Arn
      Description: DynamoDB Roles Table Arn
      Tags:
        Billable: true
        CustomerId: !Ref CustomerId
        Environment: !Ref Environment
        ProjectId: !Ref ProjectId