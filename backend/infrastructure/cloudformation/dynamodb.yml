# --------------------------------------------------- #
# DynamoDB CloudFormation Template
# Generated at 
#
# This template follows these conventions:
# - Table names: snake_case (e.g., application_users)
# - Resource names: PascalCase (e.g., ApplicationRolesTable)
# - Parameter names: PascalCase with Name/Arn suffix (e.g., ApplicationRolesTableName)
# - Export names: PascalCase with TableName/TableArn suffix (e.g., ApplicationRolesTableName)
#
# All tables use:
# - PAY_PER_REQUEST billing mode
# - Standard environment tags
# - SSM parameters for table names and ARNs
# --------------------------------------------------- #

AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
 Application Infrastructure - DynamoDB Tables

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
    Description: Environment name (dev, staging, prod)
  CustomerId:
    Default: orb
    Type: String
    Description: Customer identifier
  ProjectId:
    Default: integration-hub
    Type: String
    Description: Project identifier
  TracingIs:
    Default: Active
    Type: String
    Description: Whether tracing is enabled

# --------------------------------------------------- #
Resources:
  RolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles
      AttributeDefinitions:
        - AttributeName: role_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: role_name
          AttributeType: S
        - AttributeName: role_type
          AttributeType: S
        - AttributeName: permissions
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: updated_at
          AttributeType: S
        - AttributeName: active
          AttributeType: S
      KeySchema:
        - AttributeName: role_id
          KeyType: HASH
        - AttributeName: application_id
          KeyType: HASH

  RolesTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/roles/table-name
      Type: String
      Value: !Ref RolesTable

  RolesTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/roles/table-arn
      Type: String
      Value: !GetAtt RolesTable.Arn
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-users
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: cognito_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
        - AttributeName: phone_number
          AttributeType: S
        - AttributeName: phone_verified
          AttributeType: S
        - AttributeName: first_name
          AttributeType: S
        - AttributeName: last_name
          AttributeType: S
        - AttributeName: groups
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: updated_at
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH

  UsersTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/users/table-name
      Type: String
      Value: !Ref UsersTable

  UsersTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/users/table-arn
      Type: String
      Value: !GetAtt UsersTable.Arn
  ApplicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications
      AttributeDefinitions:
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: name
          AttributeType: S
        - AttributeName: description
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: updated_at
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: application_id
          KeyType: HASH

  ApplicationsTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/applications/table-name
      Type: String
      Value: !Ref ApplicationsTable

  ApplicationsTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/applications/table-arn
      Type: String
      Value: !GetAtt ApplicationsTable.Arn
  ApplicationUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-application_users
      AttributeDefinitions:
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: role_id
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: updated_at
          AttributeType: S
      KeySchema:
        - AttributeName: application_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: HASH

  ApplicationUsersTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/application_users/table-name
      Type: String
      Value: !Ref ApplicationUsersTable

  ApplicationUsersTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/application_users/table-arn
      Type: String
      Value: !GetAtt ApplicationUsersTable.Arn
  ApplicationRolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-application_roles
      AttributeDefinitions:
        - AttributeName: application_id
          AttributeType: S
        - AttributeName: role_id
          AttributeType: S
        - AttributeName: description
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
        - AttributeName: updated_at
          AttributeType: S
      KeySchema:
        - AttributeName: application_id
          KeyType: HASH
        - AttributeName: role_id
          KeyType: HASH

  ApplicationRolesTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/application_roles/table-name
      Type: String
      Value: !Ref ApplicationRolesTable

  ApplicationRolesTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Environment}/${CustomerId}/${ProjectId}/dynamodb/application_roles/table-arn
      Type: String
      Value: !GetAtt ApplicationRolesTable.Arn

# --------------------------------------------------- #
Outputs:
  RolesTableName:
    Description: roles Table Name
    Value: !Ref RolesTable
    Export:
      Name: !Sub ${AWS::StackName}-roles-table-name

  RolesTableArn:
    Description: roles Table ARN
    Value: !GetAtt RolesTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-roles-table-arn
  UsersTableName:
    Description: users Table Name
    Value: !Ref UsersTable
    Export:
      Name: !Sub ${AWS::StackName}-users-table-name

  UsersTableArn:
    Description: users Table ARN
    Value: !GetAtt UsersTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-users-table-arn
  ApplicationsTableName:
    Description: applications Table Name
    Value: !Ref ApplicationsTable
    Export:
      Name: !Sub ${AWS::StackName}-applications-table-name

  ApplicationsTableArn:
    Description: applications Table ARN
    Value: !GetAtt ApplicationsTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-applications-table-arn
  ApplicationUsersTableName:
    Description: application_users Table Name
    Value: !Ref ApplicationUsersTable
    Export:
      Name: !Sub ${AWS::StackName}-application_users-table-name

  ApplicationUsersTableArn:
    Description: application_users Table ARN
    Value: !GetAtt ApplicationUsersTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-application_users-table-arn
  ApplicationRolesTableName:
    Description: application_roles Table Name
    Value: !Ref ApplicationRolesTable
    Export:
      Name: !Sub ${AWS::StackName}-application_roles-table-name

  ApplicationRolesTableArn:
    Description: application_roles Table ARN
    Value: !GetAtt ApplicationRolesTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-application_roles-table-arn
