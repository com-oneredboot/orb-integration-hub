[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "orb-models"
version = "0.1.0"
description = "Shared data models for ORB Integration Hub"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "ORB Integration Hub Team", email = "team@orb-integration-hub.com"},
]
maintainers = [
    {name = "ORB Integration Hub Team", email = "team@orb-integration-hub.com"},
]
keywords = ["orb", "models", "data", "schema", "dynamodb"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
    "Private :: Do Not Upload",
]

dependencies = [
    "pydantic>=2.0.0",
    "boto3>=1.26.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "moto>=4.0.0",  # For mocking AWS services
]

dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pylint>=2.16.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/orb-integration-hub/orb-integration-hub"
Repository = "https://github.com/orb-integration-hub/orb-integration-hub"
Documentation = "https://docs.orb-integration-hub.com"
Issues = "https://github.com/orb-integration-hub/orb-integration-hub/issues"

[tool.setuptools]
packages = ["orb_models"]

[tool.setuptools.package-data]
orb_models = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=orb_models --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["orb_models"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "100"