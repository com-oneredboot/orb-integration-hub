AWSTemplateFormatVersion: 2010-09-09
Description: Monitoring and Dashboard resources for Orb Integration Hub

Parameters:
  AppSyncApiId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: The AppSync API ID from SSM Parameter Store
  Environment:
    Type: String
    Default: dev
  CustomerId:
    Type: String
    Default: orb
  ProjectId:
    Type: String
    Default: integration-hub
  AlertEmail:
    Type: String
    Description: Email address for security alerts (optional)
    Default: ''

Conditions:
  HasAlertEmail: !Not [!Equals [!Ref AlertEmail, '']]

Resources:
  AppSyncMonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/AppSync", "4XXError", "GraphQLAPIId", "${AppSyncApiId}" ],
                  [ ".", "5XXError", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AppSync 4XX/5XX Errors"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/AppSync", "Latency", "GraphQLAPIId", "${AppSyncApiId}" ],
                  [ ".", "IntegrationLatency", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AppSync Latency"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/AppSync", "RequestCount", "GraphQLAPIId", "${AppSyncApiId}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AppSync Request Count"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/AppSync", "ThrottledRequests", "GraphQLAPIId", "${AppSyncApiId}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "AppSync Throttled Requests"
              }
            }
          ]
        }

  AppSync4XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-4xx-error-alarm'
      MetricName: 4XXError
      Namespace: AWS/AppSync
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: GraphQLAPIId
          Value: !Ref AppSyncApiId
      AlarmDescription: 'AppSync 4XX error rate is high.'
      TreatMissingData: notBreaching

  AppSync5XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-5xx-error-alarm'
      MetricName: 5XXError
      Namespace: AWS/AppSync
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: GraphQLAPIId
          Value: !Ref AppSyncApiId
      AlarmDescription: 'AppSync 5XX error rate is high.'
      TreatMissingData: notBreaching

  AppSyncLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-latency-alarm'
      MetricName: Latency
      Namespace: AWS/AppSync
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 2000
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: GraphQLAPIId
          Value: !Ref AppSyncApiId
      AlarmDescription: 'AppSync average latency is high (ms).'
      TreatMissingData: notBreaching

  # Security Monitoring Resources
  GuardDutyDetector:
    Type: AWS::GuardDuty::Detector
    Properties:
      Enable: true
      FindingPublishingFrequency: FIFTEEN_MINUTES

  # SecurityHub:
  #   Type: AWS::SecurityHub::Hub
  #   DependsOn: GuardDutyDetector
  #   Properties:
  #     EnableDefaultStandards: true

  SecurityDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${CustomerId}-${ProjectId}-${Environment}-security-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "log",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/audit-logger/security'\n| filter event_type = \"UNAUTHORIZED_ACCESS_ATTEMPT\"\n| stats count() by bin(5m)",
                "region": "${AWS::Region}",
                "title": "Unauthorized Access Attempts (5-min intervals)",
                "view": "line"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/audit-logger/access'\n| filter organization_id != \"\"\n| stats count() as requests by organization_id\n| sort requests desc\n| limit 10",
                "region": "${AWS::Region}",
                "title": "Top 10 Most Active Organizations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/audit-logger/security'\n| filter event_type in [\"CROSS_ORGANIZATION_ACCESS\", \"PRIVILEGE_ESCALATION\", \"SUSPICIOUS_API_USAGE\"]\n| fields @timestamp, event_type, user_context.user_id, organization_id\n| sort @timestamp desc\n| limit 20",
                "region": "${AWS::Region}",
                "title": "Recent High-Priority Security Events",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/audit-logger/api'\n| filter action_details.response_time_ms > 1000\n| stats count() as slow_requests by organization_id\n| sort slow_requests desc\n| limit 10",
                "region": "${AWS::Region}",
                "title": "Slow API Requests (>1s) by Organization",
                "view": "table"
              }
            }
          ]
        }

  # CloudWatch Anomaly Detection for AppSync metrics
  AppSyncRequestCountAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: RequestCount
      Namespace: AWS/AppSync
      Stat: Average
      Dimensions:
        - Name: GraphQLAPIId
          Value: !Ref AppSyncApiId

  AppSyncLatencyAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Latency
      Namespace: AWS/AppSync
      Stat: Average
      Dimensions:
        - Name: GraphQLAPIId
          Value: !Ref AppSyncApiId

  # Anomaly Detection Alarms
  AppSyncRequestAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: AppSyncRequestCountAnomalyDetector
    Properties:
      AlarmName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-request-anomaly'
      ComparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
      EvaluationPeriods: 2
      Metrics:
        - Id: m1
          ReturnData: true
          MetricStat:
            Metric:
              MetricName: RequestCount
              Namespace: AWS/AppSync
              Dimensions:
                - Name: GraphQLAPIId
                  Value: !Ref AppSyncApiId
            Period: 300
            Stat: Average
        - Id: ad1
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
          ReturnData: true
      ThresholdMetricId: ad1
      ActionsEnabled: true
      AlarmDescription: 'AppSync request count anomaly detected'
      TreatMissingData: breaching

  AppSyncLatencyAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: AppSyncLatencyAnomalyDetector
    Properties:
      AlarmName: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-latency-anomaly'
      ComparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
      EvaluationPeriods: 2
      Metrics:
        - Id: m1
          ReturnData: true
          MetricStat:
            Metric:
              MetricName: Latency
              Namespace: AWS/AppSync
              Dimensions:
                - Name: GraphQLAPIId
                  Value: !Ref AppSyncApiId
            Period: 300
            Stat: Average
        - Id: ad1
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
          ReturnData: true
      ThresholdMetricId: ad1
      ActionsEnabled: true
      AlarmDescription: 'AppSync latency anomaly detected'
      TreatMissingData: breaching

  # ===== AUDIT LOGGING AND SECURITY MONITORING =====
  
  # Single consolidated audit log group
  AuditLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: AuditEncryptionKey
    Properties:
      LogGroupName: !Sub "/audit/${Environment}"
      RetentionInDays: 1096  # 3 years - valid CloudWatch Logs retention period
      KmsKeyId: !GetAtt AuditEncryptionKey.Arn
  
  # Simple KMS key for audit encryption
  AuditEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "KMS key for audit log encryption in ${Environment}"
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM policies
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow CloudWatch Logs
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
  
  # KMS Key Alias for easy reference
  AuditEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${CustomerId}-${ProjectId}-audit-${Environment}"
      TargetKeyId: !Ref AuditEncryptionKey
  
  # Real-time security monitoring - consolidated metric filter
  SecurityEventsMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn: AuditLogGroup
    Properties:
      LogGroupName: !Ref AuditLogGroup
      FilterPattern: '[timestamp, event_id, event_type="SECURITY_VIOLATION" || event_type="UNAUTHORIZED_ACCESS" || event_type="LOGIN_FAILED" || event_type="PERMISSION_DENIED" || event_type="DATA_BREACH" || event_type="FRAUD_DETECTED"]'
      MetricTransformations:
        - MetricNamespace: !Sub "${CustomerId}/${ProjectId}/Security/${Environment}"
          MetricName: SecurityEvents
          MetricValue: "1"
          DefaultValue: 0
  
  # Organization activity monitoring
  OrganizationEventsMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn: AuditLogGroup
    Properties:
      LogGroupName: !Ref AuditLogGroup
      FilterPattern: '[timestamp, event_id, event_type="ORGANIZATION_CREATED" || event_type="ORGANIZATION_UPDATED" || event_type="ORGANIZATION_DELETED" || event_type="ORGANIZATION_OWNERSHIP_TRANSFERRED" || event_type="USER_INVITED" || event_type="USER_REMOVED"]'
      MetricTransformations:
        - MetricNamespace: !Sub "${CustomerId}/${ProjectId}/Organizations/${Environment}"
          MetricName: OrganizationEvents
          MetricValue: "1"
          DefaultValue: 0
  
  # CloudWatch alarm for security incidents
  SecurityEventsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${CustomerId}-${ProjectId}-security-events-${Environment}"
      AlarmDescription: "Alert on security violations and unauthorized access attempts"
      MetricName: SecurityEvents
      Namespace: !Sub "${CustomerId}/${ProjectId}/Security/${Environment}"
      Statistic: Sum
      Period: 300  # 5 minutes
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !Ref SecurityAlertTopic
  
  # SNS topic for security alerts
  SecurityAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${CustomerId}-${ProjectId}-security-alerts-${Environment}"
      DisplayName: !Sub "${CustomerId} Security Alerts (${Environment})"
      KmsMasterKeyId: !Ref AuditEncryptionKey

  # Email subscription for security alerts (if provided)
  SecurityAlertEmailSubscription:
    Type: AWS::SNS::Subscription
    Condition: HasAlertEmail
    Properties:
      TopicArn: !Ref SecurityAlertTopic
      Protocol: email
      Endpoint: !Ref AlertEmail

Outputs:
  AuditLogGroupName:
    Description: "CloudWatch log group for audit events"
    Value: !Ref AuditLogGroup
    Export:
      Name: !Sub "${CustomerId}-${ProjectId}-audit-log-group-${Environment}"
  
  AuditEncryptionKeyId:
    Description: "KMS Key ID for audit log encryption"
    Value: !Ref AuditEncryptionKey
    Export:
      Name: !Sub "${CustomerId}-${ProjectId}-audit-kms-key-${Environment}"
  
  AuditEncryptionKeyArn:
    Description: "KMS Key ARN for audit log encryption"
    Value: !GetAtt AuditEncryptionKey.Arn
    Export:
      Name: !Sub "${CustomerId}-${ProjectId}-audit-kms-key-arn-${Environment}"
  
  SecurityAlertTopicArn:
    Description: "SNS topic for security alerts"
    Value: !Ref SecurityAlertTopic
    Export:
      Name: !Sub "${CustomerId}-${ProjectId}-security-alert-topic-${Environment}"
