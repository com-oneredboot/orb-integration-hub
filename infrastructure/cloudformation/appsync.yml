# --------------------------------------------------- #
AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
  Application Infrastructure - AppSync Stack

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
  CustomerId:
    Default: orb
    Type: String
  ProjectId:
    Default: integration-hub
    Type: String
  TracingIs:
    Default: Active
    Type: String
  SchemaS3Key:
    Type: String
    Description: Name of the GraphQL schema file in S3

# --------------------------------------------------- #
Resources:
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/${CustomerId}/${ProjectId}/*'
  
  AppSyncLoggingServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs

  IntegrationHubApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync'
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        UserPoolId: !Sub "resolve:ssm:${CustomerId}-${ProjectId}-${Environment}-cognito-user-pool-id"
        AwsRegion: !Ref AWS::Region
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
        - AuthenticationType: API_KEY
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt AppSyncLoggingServiceRole.Arn
        FieldLogLevel: ALL
        ExcludeVerboseContent: false

  IntegrationHubApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      Description: "API Key for unauthenticated access"
      Expires: 1767211838

  ApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${CustomerId}-${ProjectId}-${Environment}-appsync-graphql-key'
      Description: "AppSync API Key for unauthenticated access"
      SecretString: !GetAtt IntegrationHubApiKey.ApiKey

  IntegrationHubSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      DefinitionS3Location: !Sub 's3://${CustomerId}-${ProjectId}-build-templates/${SchemaS3Key}'

  DynamoDbCrudLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      Name: DynamoDbCrudLambdaDataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !ImportValue DynamoDbCrudLambdaArn
      ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
  
  ApplicationRolesCreateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationRolesCreate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesCreate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesUpdateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationRolesUpdate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesUpdate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesDeleteResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationRolesDelete
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesDelete",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesDisableResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationRolesDisable
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesDisable",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  
  ApplicationsCreateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationsCreate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationsCreate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationsUpdateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationsUpdate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationsUpdate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationsDeleteResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationsDelete
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationsDelete",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationsDisableResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationsDisable
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationsDisable",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  
  ApplicationUsersCreateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationUsersCreate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersCreate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersUpdateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationUsersUpdate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersUpdate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersDeleteResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationUsersDelete
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersDelete",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersDisableResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: ApplicationUsersDisable
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersDisable",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  
  RolesCreateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: RolesCreate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesCreate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesUpdateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: RolesUpdate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesUpdate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesDeleteResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: RolesDelete
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesDelete",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesDisableResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: RolesDisable
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesDisable",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  
  UsersCreateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: UsersCreate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersCreate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersUpdateResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: UsersUpdate
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersUpdate",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersDeleteResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: UsersDelete
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersDelete",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersDisableResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Mutation
      FieldName: UsersDisable
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersDisable",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  
  
  ApplicationRolesQueryByApplicationRoleId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByApplicationRoleId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByApplicationRoleId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByUserIdAndRoleId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByUserIdAndRoleId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByUserIdAndRoleId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByApplicationId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByApplicationId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByApplicationId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByApplicationIdAndRoleId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByApplicationIdAndRoleId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByApplicationIdAndRoleId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByRoleId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByRoleId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByRoleId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationRolesQueryByRoleIdAndRoleType:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationRolesQueryByRoleIdAndRoleType
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationRolesQueryByRoleIdAndRoleType",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationsQueryByApplicationId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationsQueryByApplicationId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationsQueryByApplicationId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersQueryByApplicationUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationUsersQueryByApplicationUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersQueryByApplicationUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersQueryByUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationUsersQueryByUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersQueryByUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersQueryByUserIdAndApplicationId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationUsersQueryByUserIdAndApplicationId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersQueryByUserIdAndApplicationId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersQueryByApplicationId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationUsersQueryByApplicationId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersQueryByApplicationId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  ApplicationUsersQueryByApplicationIdAndUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: ApplicationUsersQueryByApplicationIdAndUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "ApplicationUsersQueryByApplicationIdAndUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesQueryByRoleId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: RolesQueryByRoleId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesQueryByRoleId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesQueryByUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: RolesQueryByUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesQueryByUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  RolesQueryByUserIdAndRoleType:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: RolesQueryByUserIdAndRoleType
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "RolesQueryByUserIdAndRoleType",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersQueryByUserId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: UsersQueryByUserId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersQueryByUserId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersQueryByEmail:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: UsersQueryByEmail
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersQueryByEmail",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)
  UsersQueryByCognitoId:
    Type: AWS::AppSync::Resolver
    DependsOn: DynamoDbCrudLambdaDataSource
    Properties:
      ApiId: !GetAtt IntegrationHubApi.ApiId
      TypeName: Query
      FieldName: UsersQueryByCognitoId
      DataSourceName: DynamoDbCrudLambdaDataSource
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "UsersQueryByCognitoId",
            "arguments": $util.toJson($ctx.args)
          }
        }
      ResponseMappingTemplate: |
        $util.toJson($ctx.result)

# --------------------------------------------------- #
Outputs:
  IntegrationHubApiId:
    Description: The ID of the AppSync API
    Value: !GetAtt IntegrationHubApi.ApiId
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-appsync-api-id

  IntegrationHubApiEndpoint:
    Description: The endpoint URL of the AppSync API
    Value: !GetAtt IntegrationHubApi.GraphQLUrl
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-appsync-api-endpoint 