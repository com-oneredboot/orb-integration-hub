# --------------------------------------------------- #
AWSTemplateFormatVersion: 2010-09-09

# --------------------------------------------------- #
Transform: AWS::Serverless-2016-10-31

# --------------------------------------------------- #
Description: >
 Application Infrastructure - DynamoDB Tables

# --------------------------------------------------- #
Parameters:
  Environment:
    Default: dev
    Type: String
    Description: Environment name (dev, staging, prod)
  CustomerId:
    Default: orb
    Type: String
    Description: Customer identifier
  ProjectId:
    Default: integration-hub
    Type: String
    Description: Project identifier
  TracingIs:
    Default: Active
    Type: String
    Description: Whether tracing is enabled

# --------------------------------------------------- #
Resources:
  ApplicationRolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-roles
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: applicationId
          KeyType: HASH
        - AttributeName: roleId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: roleId
          AttributeType: S
        - AttributeName: roleType
          AttributeType: S
        - AttributeName: applicationId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: user-role-index
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: roleId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: application-role-index
          KeySchema:
            - AttributeName: applicationId
              KeyType: HASH
            - AttributeName: roleId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      LocalSecondaryIndexes:
        - IndexName: role-type-index
          KeySchema:
            - AttributeName: roleId
              KeyType: HASH
            - AttributeName: roleType
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  ApplicationRolesTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-roles-table-arn
      Type: String
      Value: !GetAtt ApplicationRolesTable.Arn

  ApplicationRolesTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-roles-table-name
      Type: String
      Value: !Ref ApplicationRolesTable
  ApplicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: applicationId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: applicationId
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: application-name-index
          KeySchema:
            - AttributeName: name
              KeyType: HASH
            - AttributeName: applicationId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  ApplicationsTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications-table-arn
      Type: String
      Value: !GetAtt ApplicationsTable.Arn

  ApplicationsTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications-table-name
      Type: String
      Value: !Ref ApplicationsTable
  ApplicationUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-users
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: applicationId
          KeyType: HASH
        - AttributeName: userId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: roleId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: applicationId
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: user-applications-index
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: applicationId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: application-role-index
          KeySchema:
            - AttributeName: applicationId
              KeyType: HASH
            - AttributeName: roleId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: user-status-index
          KeySchema:
            - AttributeName: applicationId
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  ApplicationUsersTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-users-table-arn
      Type: String
      Value: !GetAtt ApplicationUsersTable.Arn

  ApplicationUsersTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-users-table-name
      Type: String
      Value: !Ref ApplicationUsersTable
  RolesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: roleId
          KeyType: HASH
        - AttributeName: applicationId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: roleId
          AttributeType: S
        - AttributeName: roleType
          AttributeType: S
        - AttributeName: applicationId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: user-role-index
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: roleId
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - roleName
              - roleType
              - permissions
        - IndexName: application-role-index
          KeySchema:
            - AttributeName: applicationId
              KeyType: HASH
            - AttributeName: roleId
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
      LocalSecondaryIndexes:
        - IndexName: role-type-index
          KeySchema:
            - AttributeName: roleId
              KeyType: HASH
            - AttributeName: roleType
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  RolesTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles-table-arn
      Type: String
      Value: !GetAtt RolesTable.Arn

  RolesTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles-table-name
      Type: String
      Value: !Ref RolesTable
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${CustomerId}-${ProjectId}-${Environment}-users
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: cognitoId
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: phoneNumber
          AttributeType: S
        - AttributeName: email
          AttributeType: S
        - AttributeName: cognitoId
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: cognito-user-index
          KeySchema:
            - AttributeName: cognitoId
              KeyType: HASH
            - AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: phone-user-index
          KeySchema:
            - AttributeName: phoneNumber
              KeyType: HASH
            - AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: email-user-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
            - AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  UsersTableArn:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-users-table-arn
      Type: String
      Value: !GetAtt UsersTable.Arn

  UsersTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-users-table-name
      Type: String
      Value: !Ref UsersTable

# --------------------------------------------------- #
Outputs:
  ApplicationRolesTableArn:
    Description: The ARN of the ApplicationRoles table
    Value: !GetAtt ApplicationRolesTable.Arn
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-roles-table-arn

  ApplicationRolesTableName:
    Description: The name of the ApplicationRoles table
    Value: !Ref ApplicationRolesTable
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-roles-table-name
  ApplicationsTableArn:
    Description: The ARN of the Applications table
    Value: !GetAtt ApplicationsTable.Arn
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications-table-arn

  ApplicationsTableName:
    Description: The name of the Applications table
    Value: !Ref ApplicationsTable
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-applications-table-name
  ApplicationUsersTableArn:
    Description: The ARN of the ApplicationUsers table
    Value: !GetAtt ApplicationUsersTable.Arn
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-users-table-arn

  ApplicationUsersTableName:
    Description: The name of the ApplicationUsers table
    Value: !Ref ApplicationUsersTable
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-application-users-table-name
  RolesTableArn:
    Description: The ARN of the Roles table
    Value: !GetAtt RolesTable.Arn
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles-table-arn

  RolesTableName:
    Description: The name of the Roles table
    Value: !Ref RolesTable
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-roles-table-name
  UsersTableArn:
    Description: The ARN of the Users table
    Value: !GetAtt UsersTable.Arn
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-users-table-arn

  UsersTableName:
    Description: The name of the Users table
    Value: !Ref UsersTable
    Export:
      Name: !Sub ${CustomerId}-${ProjectId}-${Environment}-users-table-name
