# Task ID: 39
# Title: Implement Invitation Management Dashboard Interface
# Status: pending
# Dependencies: 5, 6, 27, 30, 35, 40
# Priority: medium
# Description: Create a comprehensive admin interface for managing all invitation types (starting with organizations) as a new 'Invitations' tab within the USERS section, following the master/detail/debug layout pattern and requiring refactoring of the users directory structure to match the customers architecture.
# Details:
Implement comprehensive invitation management system as part of broader users section refactoring: **1) Users Directory Structure Refactoring:** Refactor frontend/src/app/features/users directory to match customers structure with entity-based organization (users/invitations/components/, users/invitations/services/, etc.), update routing configuration to support new nested structure with proper lazy loading and route guards. Ensure consistent directory patterns across all user-related features. **2) Invitations Tab Implementation:** Create new 'Invitations' tab within USERS section navigation designed to host all invitation types (starting with organizations), implement using SharedDataTableComponent for consistency with other admin tables. Follow established master/detail/debug layout pattern with global styles and responsive design principles. **3) Standard Table Filtering & Operations:** Implement standard filtering system consistent with other admin tables (not status-specific tabs), include search, date range, status dropdown, and sorting capabilities matching existing table patterns. Add standard operations toolbar following established UI patterns with individual invitation operations only (no bulk operations for small invitation volumes). **4) Master/Detail/Debug Layout:** Design three-panel layout with invitation list (master), selected invitation details (detail), and debug information panel, implement responsive behavior that collapses panels appropriately on smaller screens. Use global styles and component patterns established in other admin sections. **5) Invitation Status Tracking System:** Build comprehensive invitation status tracking with pending/accepted/expired/declined status values, implement internal notification system (no email links) with 'viewed' tracking when notifications are opened. Create full audit trail system persisting all status changes with timestamps for current status display and future history table capability. Use AppSync subscriptions for real-time status updates across all invitation types with consistent tracking patterns. **6) Modal-Based Invitation Creation Interface:** Build modal-based invitation creation interface for organization invitations only, supporting two roles: administrator (default) and viewer. Implement email validation to ensure invitees are existing users in the system. Include standardized message templates with live preview functionality and placeholder support for inviter name, organization name, role, and custom message. Design for small invitation volumes (<10 users per organization) with individual invitation management only. Include expiration date configuration with 7-day default and 1-14 day maximum range. **7) Simplified Invitation Acceptance Flow:** Implement streamlined invitation acceptance flow for existing users only (no account creation). Invitees view invitations in the invitations tab/list widget, click invitation to see details with simple role name display (not detailed permissions). Provide simple accept/decline buttons without decline reasons. Default invitation expiration to 7 days with invitor ability to set 1-14 days maximum. No preview pane required - keep interface simple and focused. **8) Internal Notification Template System:** Implement standardized internal notification templates designed to be sharp and brief, with different standard messages per invitation type (starting with organization invitations). Support only messaging/title modifications before sending (no persistent customizable templates). Include standard placeholders: inviter name, organization name, role, and message. Provide live preview as user types modifications. Templates must be reusable across future invitation types. External email notifications deferred until notification system is implemented. **9) Routing & Navigation Updates:** Update routing configuration to support new users section structure, implement proper breadcrumb navigation and deep linking support. Ensure backward compatibility during transition and proper route guards for admin access. **10) Mobile Responsiveness & Error Handling:** Ensure all invitation workflows function properly across devices using existing single column layout for mobile. Implement full-screen modal for invitation creation on mobile devices. Use standard error handling patterns consistent with all other pages in the project, including standard loading indicators and error messaging patterns. Follow all existing project standards for mobile responsiveness and error handling - no offline capability or custom error handling required.

# Test Strategy:
Execute comprehensive testing covering both invitation functionality and structural refactoring: **1) Directory Structure & Routing Testing:** Validate new users directory structure matches customers pattern with proper component organization, test routing configuration with lazy loading, route guards, and deep linking functionality. Verify backward compatibility and proper navigation breadcrumbs. **2) Invitations Tab Integration Testing:** Test new Invitations tab integration within USERS section navigation, validate SharedDataTableComponent usage and consistency with other admin tables. Test master/detail/debug layout responsiveness and panel behavior across screen sizes. **3) Standard Filtering & Operations Testing:** Validate filtering system consistency with other admin tables including search, sorting, and individual operations only, test filter persistence and URL parameter handling. Verify individual operation functionality with proper error handling and user feedback (no bulk operations testing required). **4) Invitation Status Tracking Testing:** Comprehensive testing of status tracking system with pending/accepted/expired/declined values, validate internal notification system with 'viewed' tracking functionality. Test audit trail persistence and timestamp accuracy, verify AppSync subscription real-time updates across all invitation types. Test status consistency across different invitation workflows and ensure proper data persistence for future history table implementation. **5) Modal Invitation Creation Testing:** Test modal-based invitation creation interface for organization invitations, validate email validation for existing users only and proper error handling for non-existing emails. Test role selection (administrator/viewer) with administrator as default, validate standardized message templates with live preview functionality. Test placeholder replacement for inviter name, organization name, role, and custom message within templates for individual invitation creation only. Test expiration date configuration with 7-day default and 1-14 day maximum range validation. Test full-screen modal behavior on mobile devices. **6) Simplified Invitation Acceptance Flow Testing:** Test streamlined invitation acceptance flow for existing users only (no account creation testing required). Validate invitees can view invitations in invitations tab/list widget, test click-to-view invitation details functionality. Test simple role name display (not detailed permissions) and simple accept/decline button functionality without decline reasons. Validate default 7-day expiration and invitor's ability to set 1-14 day maximum range. Test that no preview pane is present and interface remains simple and focused. **7) Mobile Responsiveness & Error Handling Testing:** Test existing single column layout implementation on mobile devices, validate full-screen modal behavior for invitation creation on mobile. Test standard error handling patterns consistent with other pages, validate standard loading indicators and error messaging patterns. Verify all mobile interactions follow existing project standards (no offline capability testing required). **8) Cross-Feature Integration Testing:** Test integration between refactored users section and existing features, validate that other user-related functionality continues working after directory restructuring. Test admin permissions and access controls across refactored components. **9) Performance & Migration Testing:** Load testing for invitation management with small datasets (<10 users per organization), test migration of existing user-related routes and bookmarks. Validate that refactoring doesn't impact performance of other user management features and AppSync subscription performance under normal load with individual operations only.
